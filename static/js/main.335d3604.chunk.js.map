{"version":3,"sources":["containers/MainMenu/MainMenu.module.css","containers/LanguagesSelector/LanguageSelect/LanguageItem/LanguageItem.module.css","components/Main/Main.module.css","containers/LanguagesSelector/LanguageSelect/LanguageSelect.module.css","containers/MainMenuList/MainMenuList.js","containers/MainMenu/MainMenu.js","containers/LanguagesSelector/LanguageSelect/LanguageItem/LanguageItem.js","containers/LanguagesSelector/LanguageSelect/LanguageSelect.js","containers/LanguagesSelector/LanguagesSelector.js","components/Main/Main.js","assets/wordLists/wordsAnimals.js","assets/wordLists/wordsPostOffice.js","assets/wordLists/wordsPeople.js","assets/wordLists/wordsWeekDays.js","assets/wordLists/wordsFruitsNuts.js","assets/wordLists/wordsTrees.js","assets/wordLists/wordsHouse.js","App.js","serviceWorker.js","index.js","containers/MainMenuList/MainMenuList.module.css","containers/LanguagesSelector/LanguagesSelector.module.css"],"names":["module","exports","MainMenuList","listChosen","e","props","clickHandler","currentTarget","innerText","hideList","listOfWordLists","Object","keys","this","wordsLists","map","elem","onClick","key","replace","className","styles","visible","Visible","inVisible","join","Component","MainMenu","state","isListVisible","MenuClickHandler","vis","setState","active","wordListClicked","LanguageItem","isActive","includes","role","code","Active","langClicked","id","langName","LanguageSelect","langItems","languages","languageClicked","LanguagesSelector","LangInfo","Selector","langChosenHandler","Divider","Main","chosenListName","chosenLanguageQuestion","chosenLanguageAnswer","lastRandom","currKey","exampleText","question","answer","answerText","answerColor","currentKeysArray","langsActive","placeholder","pol","eng","ger","esp","addWordsToList","listName","axios","post","then","resp","console","log","catch","err","wordListChosen","txt","chosenList","getQuestionFromList","checkAnswer","ansColor","q","givenAnswer","a","currKeysArr","splice","length","push","answerInput","focus","firstEnter","keyDownHandler","changeInputTextHandler","target","name","value","chosenListLocal","rand","Math","floor","random","chosenKey","languageChosenHandler","currLangs","clicked","dir","slice","lang","shift","unshift","pop","chosenListNameText","LEDcolor","LEDcolorRed","LEDcolorGreen","allRemaining","uniqueRemaining","Set","size","wordsRemain","Centered","questionDiv","style","color","questionLED","type","ref","input","invisible","onChange","onKeyDown","wordsAnimals_part1","wordsAnimals_part2","wordsAnimals_part3","wordsPostOffice","wordsPeople","wordsWeekDays","wordsFruitsNuts_part1","wordsFruitsNuts_part2","wordsFruitsNuts_part3","wordsTrees_part1","wordsTrees_part2","wordsBathroom","wordsHome","wordsKitchen","wordsHousehold","wordsRelations","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.335d3604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenu\":\"MainMenu_MainMenu__2_H0z\",\"active\":\"MainMenu_active__nbrUn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LanguageItem\":\"LanguageItem_LanguageItem__1t4Bn\",\"Active\":\"LanguageItem_Active__N--Q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Centered\":\"Main_Centered__35NUP\",\"chosenListName\":\"Main_chosenListName__slcpN\",\"exampleText\":\"Main_exampleText__3trVy\",\"questionDiv\":\"Main_questionDiv__3ztVL\",\"qestionDivBgGreen\":\"Main_qestionDivBgGreen__2AW7P\",\"questionLED\":\"Main_questionLED__FwrIL\",\"LEDcolorRed\":\"Main_LEDcolorRed__2FzoB\",\"LEDcolorGreen\":\"Main_LEDcolorGreen__1LT7e\",\"answerInput\":\"Main_answerInput__2oaL1\",\"button\":\"Main_button__2udGA\",\"btnConfirm\":\"Main_btnConfirm__3FPY0\",\"btnStart\":\"Main_btnStart__xL3cL\",\"btnWords\":\"Main_btnWords__1tv09\",\"invisible\":\"Main_invisible__1QNHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LanguageSelect\":\"LanguageSelect_LanguageSelect__3OgFJ\"};","import React, {Component} from 'react'\r\n\r\n\r\nimport styles from './MainMenuList.module.css';\r\n\r\nclass MainMenuList extends Component {\r\n\r\n    listChosen = (e) => {\r\n        this.props.clickHandler(e.currentTarget.innerText);\r\n        this.props.hideList();\r\n    }\r\n\r\n    render() {\r\n        const listOfWordLists = (Object.keys(this.props.wordsLists)).map( elem => <li onClick={this.listChosen} key={elem}>{elem.replace('words','')}</li> )\r\n        return (\r\n            <ul className={[styles.MainMenuList, this.props.visible ? (styles.Visible) : (styles.inVisible)].join(' ')} >\r\n                {listOfWordLists}\r\n            </ul>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MainMenuList;","import React, { Component } from 'react';\r\nimport MainMenuList from '../MainMenuList/MainMenuList';\r\n\r\nimport styles from './MainMenu.module.css';\r\n\r\n\r\nclass MainMenu extends Component {\r\n    state = {\r\n        isListVisible: false,\r\n    }\r\n    \r\n    \r\n    MenuClickHandler = () => {\r\n        let vis = this.state.isListVisible;\r\n        this.setState({\r\n            isListVisible: !vis\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <div className={[styles.MainMenu, this.state.isListVisible ? styles.active : '' ].join(' ')}\r\n                    onClick={this.MenuClickHandler}\r\n                    >Menu</div>\r\n                <MainMenuList \r\n                    visible={this.state.isListVisible} \r\n                    clickHandler={this.props.wordListClicked}\r\n                    hideList={this.MenuClickHandler}\r\n                    wordsLists={this.props.wordsLists}\r\n                />\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default MainMenu;","import React from 'react'\r\n\r\nimport styles from './LanguageItem.module.css';\r\n\r\nconst LanguageItem = (props) => {\r\n\r\n    let isActive;\r\n    if (props.isActive.includes(props.role+props.code)) {\r\n        isActive = styles.Active;\r\n    }\r\n\r\n    return ( <div className={[styles.LanguageItem, isActive].join(' ')}\r\n                onClick={props.langClicked}\r\n                role={props.role}\r\n                code={props.code}\r\n                id={props.role+props.code}\r\n                >{props.langName}</div> \r\n            );\r\n}\r\n \r\nexport default LanguageItem;","import React from 'react';\r\nimport LanguageItem from './LanguageItem/LanguageItem'\r\n\r\nimport styles from './LanguageSelect.module.css';\r\n\r\nconst LanguageSelect = (props) => {\r\n\r\n    let langKeys = Object.keys(props.languages);\r\n    let langItems = langKeys.map( key => {\r\n        return <LanguageItem\r\n            langName={props.languages[key]} \r\n            role={props.role}\r\n            code={key}\r\n            key={key}\r\n            isActive={props.isActive}\r\n            langClicked={props.languageClicked}\r\n            />\r\n    })\r\n    \r\n    return ( \r\n        <div className={styles.LanguageSelect}>\r\n            {langItems}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LanguageSelect;\r\n","import React from 'react'\r\nimport LanguageSelect from './LanguageSelect/LanguageSelect';\r\n\r\nimport styles from './LanguagesSelector.module.css';\r\n\r\nconst LanguagesSelector = (props) => {\r\n    \r\n    // console.log(props.isActive)\r\n\r\n\r\n    return ( \r\n        <div >\r\n            <div className={styles.LangInfo}>\r\n                <div>Język ojczysty:</div>\r\n                <div>Foreign language:</div>\r\n            </div>\r\n            <div className={styles.Selector}>\r\n                <LanguageSelect \r\n                    languageClicked={props.langChosenHandler} \r\n                    languages={props.languages}\r\n                    isActive={props.isActive}\r\n                    role=\"q\" \r\n                    />\r\n                <div className={styles.Divider}> >>> </div>\r\n                <LanguageSelect  \r\n                    languageClicked={props.langChosenHandler} \r\n                    languages={props.languages}\r\n                    isActive={props.isActive}\r\n                    role=\"a\" \r\n                    />\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LanguagesSelector;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport MainMenu from '../../containers/MainMenu/MainMenu';\nimport LanguagesSelector from '../../containers/LanguagesSelector/LanguagesSelector';\nimport styles from './Main.module.css';\n\nclass Main extends Component {\n    state = {\n        chosenListName: '',\n        chosenLanguageQuestion: 'pol',\n        chosenLanguageAnswer: 'eng',\n        lastRandom: 0,\n        currKey: 0,\n        exampleText: '',\n        question: '',\n        answer: '',\n        answerText: '',\n        answerColor: 'black',\n        currentKeysArray: [],\n        langsActive: [\"qpol\", \"aeng\"],\n        placeholder: \"wpisz odpowiedź\"\n    }\n\n    wordsLists = this.props.wordsLists;\n\n    languages = {pol: \"Polski\", eng: \"English\", ger: \"Deutsche\", esp: \"Español\"}\n\n    addWordsToList = (listName) => {\n        const post = {\n            \"pol\": \"bawół\",\n            \"eng\": \"buffalo\",\n            \"ger\": \"Büffel\",\n            \"esp\": \"búfalo\"\n        }\n\n        axios.post('/wordsLists.' + listName + '.json', post)\n            .then(resp=>{\n                console.log(resp)\n            })\n            .catch(err=>{\n                console.log(err)\n            });\n    }\n\n    wordListChosen = txt => {\n        const chosenListName = 'words' + txt.replace(' ', '');\n        const chosenList = this.wordsLists[chosenListName];\n        const currentKeysArray = Object.keys(chosenList); // array with only keys\n        this.setState({ \n            chosenListName: chosenListName,\n            currentKeysArray: currentKeysArray,\n        })\n        this.getQuestionFromList(chosenList, currentKeysArray);\n        this.setState({\n            chosenListName: 'words' + txt.replace(' ', ''),\n        })\n    }\n\n    checkAnswer = () => {\n        const q = this.state.question;\n        const givenAnswer = this.state.answerText;\n        const a = this.state.answer;\n        const currKeysArr = this.state.currentKeysArray;\n        const currKey = currKeysArr[this.state.currKey];\n\n        if (a === givenAnswer) {\n            currKeysArr.splice(this.state.currKey, 1);\n            let question, ansColor;\n            if (currKeysArr.length > 0) {\n                question = `${q} ==> ${a}!`\n                ansColor = 'green';\n            } else {\n                question = \"WSPANIALE, poznałeś wszystkie słowa z listy!!!\";\n                ansColor = 'blue';\n            }\n            this.setState({\n                question: question,\n                answerColor: ansColor,\n                answerText: '',\n                currentKeysArray: currKeysArr,\n                placeholder: 'naciśnij Enter'\n            })\n        } else {\n            currKeysArr.push(currKey)\n            this.setState({\n                question: `${q} ==> ${a}!`,\n                answerColor: 'red',\n                answerText: '',\n                currentKeysArray: currKeysArr\n            })\n        }\n        this.answerInput.focus()\n    }\n\n    firstEnter = true;\n\n    keyDownHandler = e => {\n        if (e.key === 'Enter') {\n            if (this.firstEnter) {\n                console.log('First: ', this.firstEnter)\n                this.checkAnswer();\n                this.firstEnter = false;\n                this.setState({\n                    placeholder: 'naciśnij Enter'\n                })\n            } else {\n                if (this.state.currentKeysArray.length > 0) {\n                    this.getQuestionFromList(this.wordsLists[this.state.chosenListName], this.state.currentKeysArray);\n                    this.setState({\n                        placeholder: 'wpisz odpowiedź'\n                    })\n                } else {\n                    this.setState({\n                        chosenListName: '',\n                        question: '',\n                    })\n                }\n                this.firstEnter = true;\n            }\n        }\n    }\n\n    changeInputTextHandler = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    getQuestionFromList = (chosenList, currentKeysArray = this.state.currentKeysArray) => {\n        const chosenListLocal = chosenList || this.state.chosenListName;\n        const rand = Math.floor(Math.random() * currentKeysArray.length);\n        const chosenKey = currentKeysArray[rand];\n        const question = chosenListLocal[chosenKey][this.state.chosenLanguageQuestion];\n        const answer = chosenListLocal[chosenKey][this.state.chosenLanguageAnswer];\n        this.setState({\n            question: question,\n            answer: answer,\n            answerColor: 'black',\n            currKey: rand,\n        })\n        this.answerInput.focus();\n    }\n\n    languageChosenHandler = e => {\n        let currLangs = this.state.langsActive;\n        let clicked = e.target.id;\n        let dir = clicked.slice(0,1);\n        let lang = clicked.slice(1);\n        if (dir === \"q\") {\n            currLangs.shift();\n            currLangs.unshift(clicked);\n        } else {\n            currLangs.pop();\n            currLangs.push(clicked);\n        }\n        dir === \"q\" ? this.setState({\n            chosenLanguageQuestion: lang,\n            langsActive: currLangs\n        }) : this.setState({\n            chosenLanguageAnswer: lang,\n            langsActive: currLangs\n        })\n    }\n\n    // componentDidUpdate = () => {\n    //     console.log(this.state.langsActive)\n    // }\n    \n    render() {\n        const chosenListNameText = this.state.chosenListName === \"\"\n            ? 'Wybierz języki oraz listę słów z Menu'\n            : ('Lista: ');\n        \n        let LEDcolor = '';\n        switch (this.state.answerColor) {\n            case 'red': LEDcolor = styles.LEDcolorRed; break;\n            case 'green': LEDcolor = styles.LEDcolorGreen; break;\n            default:\n        }\n\n        let allRemaining = this.state.currentKeysArray.length\n        let uniqueRemaining = (new Set(this.state.currentKeysArray)).size\n\n        let wordsRemain = this.state.chosenListName === \"\" ? \"\" :\n            <span className={styles.wordsRemain}>, Pozostało: <b>{uniqueRemaining}</b> słów, <b>{allRemaining}</b> powtórek</span>;\n\n        return (\n\n            <div>\n                <header>\n\t\t\t\t\t<MainMenu \n                        wordListClicked={this.wordListChosen}\n                        wordsLists={this.wordsLists}\n                        languages={this.languages} \n                        isActive={this.state.langsActive}\n                        />\n\t\t\t\t</header>\n\n                <main className={styles.Centered} >\n\n                    <LanguagesSelector \n                        languages={this.languages} \n                        langChosenHandler={this.languageChosenHandler}\n                        isActive={this.state.langsActive}\n                        />\n\n                    <div className={styles.chosenListName}>\n                        {chosenListNameText}<b>{this.state.chosenListName.replace('words','').replace('_', ' ')}</b> \n                        {wordsRemain}\n                        </div>\n                \n                    {/* <div className={styles.exampleText}>{this.state.exampleText}</div> */}\n\n\n                    <div className={styles.questionDiv}\n                        style={{color: this.state.answerColor}}>\n                        <div className={[styles.questionLED, LEDcolor].join(' ')}></div>\n                        {this.state.question}\n                        <div className={[styles.questionLED, LEDcolor].join(' ')}></div>\n                    </div>\n\n                    <input type=\"text\" \n                        name=\"answerText\"\n                        ref={(input) => { this.answerInput = input; }} \n                        className={[styles.answerInput, (this.state.chosenListName !== '') ? \"\" : styles.invisible].join(' ','')}\n                        onChange={this.changeInputTextHandler}\n                        onKeyDown={this.keyDownHandler}\n                        value={this.state.answerText} \n                        focus=\"true\"\n                        placeholder={this.state.placeholder}\n                        />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Main;","const wordsAnimals_part1 = {\r\n    \"1\": {\r\n      \"pol\": \"bawół\",\r\n      \"eng\": \"buffalo\",\r\n      \"ger\": \"Büffel\",\r\n      \"esp\": \"búfalo\"\r\n   },\r\n   \"2\": {\r\n      \"pol\": \"chomik\",\r\n      \"eng\": \"hamster\",\r\n      \"ger\": \"Hamster\",\r\n      \"esp\": \"hámster\"\r\n   },\r\n   \"3\": {\r\n      \"pol\": \"daniel\",\r\n      \"eng\": \"fallow deer\",\r\n      \"ger\": \"Damhirsch\",\r\n      \"esp\": \"gamo\"\r\n   },\r\n   \"4\": {\r\n      \"pol\": \"dzik\",\r\n      \"eng\": \"boar\",\r\n      \"ger\": \"Eber\",\r\n      \"esp\": \"verraco\"\r\n   },\r\n   \"5\": {\r\n      \"pol\": \"dziobak\",\r\n      \"eng\": \"platypus\",\r\n      \"ger\": \"Schnabeltier\",\r\n      \"esp\": \"ornitorrinco\"\r\n   },\r\n   \"6\": {\r\n      \"pol\": \"gibon\",\r\n      \"eng\": \"gibbon\",\r\n      \"ger\": \"Gibbon\",\r\n      \"esp\": \"gibón\"\r\n   },\r\n   \"7\": {\r\n      \"pol\": \"gołąb\",\r\n      \"eng\": \"pidgeon\",\r\n      \"ger\": \"Pidgeon\",\r\n      \"esp\": \"paloma\"\r\n   },\r\n   \"8\": {\r\n      \"pol\": \"goryl\",\r\n      \"eng\": \"gorilla\",\r\n      \"ger\": \"Gorilla\",\r\n      \"esp\": \"gorila\"\r\n   },\r\n   \"9\": {\r\n      \"pol\": \"jagnię\",\r\n      \"eng\": \"lamb\",\r\n      \"ger\": \"Lamm\",\r\n      \"esp\": \"cordero\"\r\n   },\r\n   \"10\": {\r\n      \"pol\": \"jastrząb\",\r\n      \"eng\": \"hawk\",\r\n      \"ger\": \"Falke\",\r\n      \"esp\": \"halcón\"\r\n   },\r\n   \"11\": {\r\n      \"pol\": \"jaszczurka\",\r\n      \"eng\": \"lizzard\",\r\n      \"ger\": \"Eidechse\",\r\n      \"esp\": \"lagarto\"\r\n   },\r\n   \"12\": {\r\n      \"pol\": \"jeleń\",\r\n      \"eng\": \"deer\",\r\n      \"ger\": \"Hirsch\",\r\n      \"esp\": \"ciervo\"\r\n   },\r\n   \"13\": {\r\n      \"pol\": \"jeż\",\r\n      \"eng\": \"hedgehog\",\r\n      \"ger\": \"Igel\",\r\n      \"esp\": \"erizo\"\r\n   },\r\n   \"14\": {\r\n      \"pol\": \"kaczka\",\r\n      \"eng\": \"duck\",\r\n      \"ger\": \"Ente\",\r\n      \"esp\": \"pato\"\r\n   },\r\n   \"15\": {\r\n      \"pol\": \"kangur\",\r\n      \"eng\": \"kangaroo\",\r\n      \"ger\": \"Känguru\",\r\n      \"esp\": \"canguro\"\r\n   },\r\n   \"16\": {\r\n      \"pol\": \"koala\",\r\n      \"eng\": \"coala\",\r\n      \"ger\": \"Koala\",\r\n      \"esp\": \"koala\"\r\n   },\r\n   \"17\": {\r\n      \"pol\": \"koń\",\r\n      \"eng\": \"horse\",\r\n      \"ger\": \"Pferd\",\r\n      \"esp\": \"caballo\"\r\n   },\r\n   \"18\": {\r\n      \"pol\": \"koza\",\r\n      \"eng\": \"goat\",\r\n      \"ger\": \"Ziege\",\r\n      \"esp\": \"cabra\"\r\n   },\r\n   \"19\": {\r\n      \"pol\": \"kret\",\r\n      \"eng\": \"mole\",\r\n      \"ger\": \"Maulwurf \",\r\n      \"esp\": \"topo\"\r\n   },\r\n   \"20\": {\r\n      \"pol\": \"krokodyl\",\r\n      \"eng\": \"crockodile\",\r\n      \"ger\": \"Krokodil\",\r\n      \"esp\": \"cocodrilo\"\r\n   }\r\n}\r\nconst wordsAnimals_part2 = {\r\n    \"21\": {\r\n        \"pol\": \"królik\",\r\n        \"eng\": \"rabbit\",\r\n        \"ger\": \"Kaninchen\",\r\n        \"esp\": \"conejo\"\r\n    },\r\n    \"22\": {\r\n        \"pol\": \"kucyk\",\r\n        \"eng\": \"pony\",\r\n        \"ger\": \"Pony\",\r\n        \"esp\": \"poni\"\r\n    },\r\n    \"23\": {\r\n        \"pol\": \"kuna\",\r\n        \"eng\": \"marten\",\r\n        \"ger\": \"Marder\",\r\n        \"esp\": \"marta\"\r\n    },\r\n    \"24\": {\r\n        \"pol\": \"kura\",\r\n        \"eng\": \"hen\",\r\n        \"ger\": \"Henne\",\r\n        \"esp\": \"gallina\"\r\n    },\r\n    \"25\": {\r\n        \"pol\": \"kurczak\",\r\n        \"eng\": \"chicken\",\r\n        \"ger\": \"Hähnchen\",\r\n        \"esp\": \"pollo\"\r\n    },\r\n    \"26\": {\r\n        \"pol\": \"lew\",\r\n        \"eng\": \"lion\",\r\n        \"ger\": \"Löwe\",\r\n        \"esp\": \"león\"\r\n    },\r\n    \"27\": {\r\n        \"pol\": \"lis\",\r\n        \"eng\": \"fox\",\r\n        \"ger\": \"Fuchs\",\r\n        \"esp\": \"zorro\"\r\n    },\r\n    \"28\": {\r\n        \"pol\": \"łoś\",\r\n        \"eng\": \"moose\",\r\n        \"ger\": \"Elch\",\r\n        \"esp\": \"alce\"\r\n    },\r\n    \"29\": {\r\n        \"pol\": \"małpa\",\r\n        \"eng\": \"monkey\",\r\n        \"ger\": \"Affe\",\r\n        \"esp\": \"mono\"\r\n    },\r\n    \"30\": {\r\n        \"pol\": \"mysz\",\r\n        \"eng\": \"mouse\",\r\n        \"ger\": \"Maus\",\r\n        \"esp\": \"ratón\"\r\n    },\r\n    \"31\": {\r\n        \"pol\": \"niedźwiedź\",\r\n        \"eng\": \"bear\",\r\n        \"ger\": \"Bär\",\r\n        \"esp\": \"oso\"\r\n    },\r\n    \"32\": {\r\n        \"pol\": \"niedźwiedź polarny\",\r\n        \"eng\": \"polar bear\",\r\n        \"ger\": \"Eisbär\",\r\n        \"esp\": \"oso polar\"\r\n    },\r\n    \"33\": {\r\n        \"pol\": \"nosorożec\",\r\n        \"eng\": \"rhinoceros\",\r\n        \"ger\": \"Nashorn\",\r\n        \"esp\": \"rinoceronte\"\r\n    },\r\n    \"34\": {\r\n        \"pol\": \"orzeł\",\r\n        \"eng\": \"eagle\",\r\n        \"ger\": \"Adler\",\r\n        \"esp\": \"águila\"\r\n    },\r\n    \"35\": {\r\n        \"pol\": \"owca\",\r\n        \"eng\": \"sheep\",\r\n        \"ger\": \"Schaf\",\r\n        \"esp\": \"oveja\"\r\n    },\r\n    \"36\": {\r\n        \"pol\": \"pantera\",\r\n        \"eng\": \"panther\",\r\n        \"ger\": \"Panther\",\r\n        \"esp\": \"pantera\"\r\n    },\r\n    \"37\": {\r\n        \"pol\": \"papuga\",\r\n        \"eng\": \"parrot\",\r\n        \"ger\": \"Papagei\",\r\n        \"esp\": \"loro\"\r\n    },\r\n    \"38\": {\r\n        \"pol\": \"pawian\",\r\n        \"eng\": \"baboon\",\r\n        \"ger\": \"Pavian\",\r\n        \"esp\": \"babuino\"\r\n    },\r\n    \"39\": {\r\n        \"pol\": \"ptak\",\r\n        \"eng\": \"bird\",\r\n        \"ger\": \"Vogel\",\r\n        \"esp\": \"pájaro\"\r\n    },\r\n    \"40\": {\r\n        \"pol\": \"ropucha\",\r\n        \"eng\": \"toad\",\r\n        \"ger\": \"Kröte\",\r\n        \"esp\": \"sapo\"\r\n    }\r\n}\r\nconst wordsAnimals_part3 = {\r\n    \"41\": {\r\n        \"pol\": \"ryba\",\r\n        \"eng\": \"fish\",\r\n        \"ger\": \"Fisch\",\r\n        \"esp\": \"pescado\"\r\n    },\r\n    \"42\": {\r\n        \"pol\": \"ryś\",\r\n        \"eng\": \"lynx\",\r\n        \"ger\": \"Luchs\",\r\n        \"esp\": \"lince\"\r\n    },\r\n    \"43\": {\r\n        \"pol\": \"sarna\",\r\n        \"eng\": \"roe\",\r\n        \"ger\": \"Rogen\",\r\n        \"esp\": \"hueva\"\r\n    },\r\n    \"44\": {\r\n        \"pol\": \"słoń\",\r\n        \"eng\": \"elephant\",\r\n        \"ger\": \"Elefant\",\r\n        \"esp\": \"elefante\"\r\n    },\r\n    \"45\": {\r\n        \"pol\": \"szczur\",\r\n        \"eng\": \"rat\",\r\n        \"ger\": \"Ratte\",\r\n        \"esp\": \"rata\"\r\n    },\r\n    \"46\": {\r\n        \"pol\": \"świnia\",\r\n        \"eng\": \"pig\",\r\n        \"ger\": \"Schwein\",\r\n        \"esp\": \"cerdo\"\r\n    },\r\n    \"47\": {\r\n        \"pol\": \"tygrys\",\r\n        \"eng\": \"tiger\",\r\n        \"ger\": \"Tiger\",\r\n        \"esp\": \"Tigre\"\r\n    },\r\n    \"48\": {\r\n        \"pol\": \"wąż\",\r\n        \"eng\": \"snake\",\r\n        \"ger\": \"Schlange\",\r\n        \"esp\": \"serpiente\"\r\n    },\r\n    \"49\": {\r\n        \"pol\": \"wielbłąd\",\r\n        \"eng\": \"camel\",\r\n        \"ger\": \"Kamel\",\r\n        \"esp\": \"camello\"\r\n    },\r\n    \"50\": {\r\n        \"pol\": \"wieloryb\",\r\n        \"eng\": \"whale\",\r\n        \"ger\": \"Wal\",\r\n        \"esp\": \"ballena\"\r\n    },\r\n    \"51\": {\r\n        \"pol\": \"wiewiórka\",\r\n        \"eng\": \"squirrel\",\r\n        \"ger\": \"Eichhörnchen\",\r\n        \"esp\": \"ardilla\"\r\n    },\r\n    \"52\": {\r\n        \"pol\": \"wilk\",\r\n        \"eng\": \"wolf\",\r\n        \"ger\": \"Wolf\",\r\n        \"esp\": \"lobo\"\r\n    },\r\n    \"53\": {\r\n        \"pol\": \"wróbel\",\r\n        \"eng\": \"sparow\",\r\n        \"ger\": \"Spatz\",\r\n        \"esp\": \"gorrión\"\r\n    },\r\n    \"54\": {\r\n        \"pol\": \"zając\",\r\n        \"eng\": \"hare\",\r\n        \"ger\": \"Hase\",\r\n        \"esp\": \"liebre\"\r\n    },\r\n    \"55\": {\r\n        \"pol\": \"żaba\",\r\n        \"eng\": \"frog\",\r\n        \"ger\": \"Frosch\",\r\n        \"esp\": \"rana\"\r\n    },\r\n    \"56\": {\r\n        \"pol\": \"żubr\",\r\n        \"eng\": \"aurochs\",\r\n        \"ger\": \"Auerochsen\",\r\n        \"esp\": \"uro\"\r\n    },\r\n    \"57\": {\r\n        \"pol\": \"żyrafa\",\r\n        \"eng\": \"giraffe\",\r\n        \"ger\": \"Giraffe\",\r\n        \"esp\": \"jirafa\"\r\n    }\r\n}\r\n\r\nexport { wordsAnimals_part1, wordsAnimals_part2, wordsAnimals_part3 };\r\n","const wordsPostOffice = {\r\n    \"1\": {\r\n        \"pol\": \"skrzynka\",\r\n        \"eng\": \"box\",\r\n        \"ger\": \"Box\",\r\n        \"esp\": \"caja\"\r\n    },\r\n    \"2\": {\r\n        \"pol\": \"kasa\",\r\n        \"eng\": \"cashier\",\r\n        \"ger\": \"Registrierkasse  \",\r\n        \"esp\": \"caja registradora\"\r\n    },\r\n    \"3\": {\r\n        \"pol\": \"klient\",\r\n        \"eng\": \"client\",\r\n        \"ger\": \"Kunde\",\r\n        \"esp\": \"cliente\"\r\n    },\r\n    \"4\": {\r\n        \"pol\": \"koperta\",\r\n        \"eng\": \"envelope\",\r\n        \"ger\": \"Umschlag\",\r\n        \"esp\": \"envoltura\"\r\n    },\r\n    \"5\": {\r\n        \"pol\": \"list\",\r\n        \"eng\": \"letter\",\r\n        \"ger\": \"Schreiben\",\r\n        \"esp\": \"carta\"\r\n    },\r\n    \"6\": {\r\n        \"pol\": \"listonosz\",\r\n        \"eng\": \"mailman\",\r\n        \"ger\": \"Postbote\",\r\n        \"esp\": \"cartero\"\r\n    },\r\n    \"7\": {\r\n        \"pol\": \"paczka\",\r\n        \"eng\": \"parcel\",\r\n        \"ger\": \"Paket\",\r\n        \"esp\": \"parcela\"\r\n    },\r\n    \"8\": {\r\n        \"pol\": \"papier\",\r\n        \"eng\": \"paper\",\r\n        \"ger\": \"Papier\",\r\n        \"esp\": \"papel\"\r\n    },\r\n    \"9\": {\r\n        \"pol\": \"pieczątka\",\r\n        \"eng\": \"stamp\",\r\n        \"ger\": \"Stempel\",\r\n        \"esp\": \"sello de goma\"\r\n    },\r\n    \"10\": {\r\n        \"pol\": \"skrzynka\",\r\n        \"eng\": \"box\",\r\n        \"ger\": \"Box\",\r\n        \"esp\": \"caja\"\r\n    },\r\n    \"11\": {\r\n        \"pol\": \"urzędnik\",\r\n        \"eng\": \"clerk\",\r\n        \"ger\": \"Schreiber\",\r\n        \"esp\": \"empleado\"\r\n    },\r\n    \"12\": {\r\n        \"pol\": \"znaczek\",\r\n        \"eng\": \"stamp\",\r\n        \"ger\": \"Stempel\",\r\n        \"esp\": \"sello\"\r\n    },\r\n    \"13\": {\r\n        \"pol\": \"długopis\",\r\n        \"eng\": \"pen\",\r\n        \"ger\": \"Kugelschreiber \",\r\n        \"esp\": \"bolígrafo\"\r\n    }\r\n}\r\n\r\nexport { wordsPostOffice };","const wordsPeople = {\r\n    \"1\": {\r\n        \"pol\": \"dziecko\",\r\n        \"eng\": \"child\",\r\n        \"ger\": \"Kind\",\r\n        \"esp\": \"niño\"\r\n    },\r\n    \"2\": {\r\n        \"pol\": \"dorosły\",\r\n        \"eng\": \"adult\",\r\n        \"ger\": \"Erwachsene\",\r\n        \"esp\": \"adulto\"\r\n    },\r\n    \"3\": {\r\n        \"pol\": \"młodzieniec\",\r\n        \"eng\": \"lad\",\r\n        \"ger\": \"Junge\",\r\n        \"esp\": \"muchacho\"\r\n    },\r\n    \"4\": {\r\n        \"pol\": \"dziewczyna\",\r\n        \"eng\": \"girl\",\r\n        \"ger\": \"Mädchen\",\r\n        \"esp\": \"chica\"\r\n    },\r\n    \"5\": {\r\n        \"pol\": \"chłopak\",\r\n        \"eng\": \"boy\",\r\n        \"ger\": \"Junge\",\r\n        \"esp\": \"chico\"\r\n    },\r\n    \"6\": {\r\n        \"pol\": \"brat\",\r\n        \"eng\": \"brother\",\r\n        \"ger\": \"Bruder\",\r\n        \"esp\": \"hermano\"\r\n    },\r\n    \"7\": {\r\n        \"pol\": \"siostra\",\r\n        \"eng\": \"sister\",\r\n        \"ger\": \"Schwester\",\r\n        \"esp\": \"hermana\"\r\n    },\r\n    \"8\": {\r\n        \"pol\": \"mama \",\r\n        \"eng\": \"mom\",\r\n        \"ger\": \"Mutter\",\r\n        \"esp\": \"madre\"\r\n    },\r\n    \"9\": {\r\n        \"pol\": \"tata \",\r\n        \"eng\": \"dad\",\r\n        \"ger\": \"Papa\",\r\n        \"esp\": \"papá\"\r\n    },\r\n    \"10\": {\r\n        \"pol\": \"dziadek\",\r\n        \"eng\": \"grandfather\",\r\n        \"ger\": \"Großvater\",\r\n        \"esp\": \"abuelo\"\r\n    },\r\n    \"11\": {\r\n        \"pol\": \"babcia\",\r\n        \"eng\": \"grandmother\",\r\n        \"ger\": \"Großmutter\",\r\n        \"esp\": \"abuela\"\r\n    },\r\n    \"12\": {\r\n        \"pol\": \"ciotka\",\r\n        \"eng\": \"aunt\",\r\n        \"ger\": \"Tante\",\r\n        \"esp\": \"tía\"\r\n    },\r\n    \"13\": {\r\n        \"pol\": \"wuj\",\r\n        \"eng\": \"uncle\",\r\n        \"ger\": \"Onkel\",\r\n        \"esp\": \"tío\"\r\n    },\r\n    \"15\": {\r\n        \"pol\": \"kuzyn\",\r\n        \"eng\": \"cousin\",\r\n        \"ger\": \"Vetter\",\r\n        \"esp\": \"primo\"\r\n    },\r\n    \"16\": {\r\n        \"pol\": \"sąsiad\",\r\n        \"eng\": \"neighbor\",\r\n        \"ger\": \"Nachbar\",\r\n        \"esp\": \"vecino\"\r\n    },\r\n    \"17\": {\r\n        \"pol\": \"przyjaciel\",\r\n        \"eng\": \"friend\",\r\n        \"ger\": \"Freund\",\r\n        \"esp\": \"amigo\"\r\n    },\r\n    \"18\": {\r\n        \"pol\": \"znajomy\",\r\n        \"eng\": \"acquaintance\",\r\n        \"ger\": \"Bekannte\",\r\n        \"esp\": \"conocido\"\r\n    },\r\n    \"19\": {\r\n        \"pol\": \"kolega\",\r\n        \"eng\": \"colleague\",\r\n        \"ger\": \"Kollege\",\r\n        \"esp\": \"colega\"\r\n    },\r\n    \"20\": {\r\n        \"pol\": \"kumpel\",\r\n        \"eng\": \"buddy\",\r\n        \"ger\": \"Kumpel\",\r\n        \"esp\": \"camarada\"\r\n    },\r\n    \"21\": {\r\n        \"pol\": \"matka\",\r\n        \"eng\": \"mother\",\r\n        \"ger\": \"Mutter\",\r\n        \"esp\": \"madre\"\r\n    },\r\n    \"22\": {\r\n        \"pol\": \"ojciec\",\r\n        \"eng\": \"father\",\r\n        \"ger\": \"Vater\",\r\n        \"esp\": \"padre\"\r\n    }\r\n}\r\n\r\nexport { wordsPeople };","const wordsWeekDays = {\r\n    \"1\": {\r\n        \"pol\": \"poniedziałek\",\r\n        \"eng\": \"Monday\",\r\n        \"ger\": \"Montag\",\r\n        \"esp\": \"lunes\"\r\n    },\r\n    \"2\": {\r\n        \"pol\": \"wtorek\",\r\n        \"eng\": \"Tuesday\",\r\n        \"ger\": \"Dienstag\",\r\n        \"esp\": \"martes\"\r\n    },\r\n    \"3\": {\r\n        \"pol\": \"środa\",\r\n        \"eng\": \"Wednesday\",\r\n        \"ger\": \"Mittwoch\",\r\n        \"esp\": \"miércoles\"\r\n    },\r\n    \"4\": {\r\n        \"pol\": \"czwartek\",\r\n        \"eng\": \"Thursday\",\r\n        \"ger\": \"Donnerstag\",\r\n        \"esp\": \"jueves\"\r\n    },\r\n    \"5\": {\r\n        \"pol\": \"piątek\",\r\n        \"eng\": \"Friday\",\r\n        \"ger\": \"Freitag\",\r\n        \"esp\": \"viernes\"\r\n    },\r\n    \"6\": {\r\n        \"pol\": \"sobota\",\r\n        \"eng\": \"Saturday\",\r\n        \"ger\": \"Samstag\",\r\n        \"esp\": \"sábado\"\r\n    },\r\n    \"7\": {\r\n        \"pol\": \"niedziela\",\r\n        \"eng\": \"Sunday\",\r\n        \"ger\": \"Sonntag\",\r\n        \"esp\": \"domingo\"\r\n    }\r\n}\r\n\r\nexport { wordsWeekDays };","const wordsFruitsNuts_part1 = {\n     \"1\": {\n      \"pol\": \"agrest\",\n      \"eng\": \"gooseberry\",\n      \"ger\": \"Stachelbeere\",\n      \"esp\": \"grosella\"\n   },\n   \"2\": {\n      \"pol\": \"ananas\",\n      \"eng\": \"pineapple\",\n      \"ger\": \"Ananas\",\n      \"esp\": \"piña\"\n   },\n   \"3\": {\n      \"pol\": \"arbuz\",\n      \"eng\": \"watermelon\",\n      \"ger\": \"Wassermelone\",\n      \"esp\": \"sandía\"\n   },\n   \"4\": {\n      \"pol\": \"aronia\",\n      \"eng\": \"chokeberry\",\n      \"ger\": \"Apfelbeere\",\n      \"esp\": \"cornijuelo\"\n   },\n   \"5\": {\n      \"pol\": \"awokado\",\n      \"eng\": \"avocado\",\n      \"ger\": \"Avocado\",\n      \"esp\": \"aguacate\"\n   },\n   \"6\": {\n      \"pol\": \"banan\",\n      \"eng\": \"banana\",\n      \"ger\": \"Banane\",\n      \"esp\": \"plátano\"\n   },\n   \"7\": {\n      \"pol\": \"biała porzeczka\",\n      \"eng\": \"white currant\",\n      \"ger\": \"weiße Johannisbeere\",\n      \"esp\": \"grosella blanca\"\n   },\n   \"8\": {\n      \"pol\": \"borówka amerykańska\",\n      \"eng\": \"blueberry\",\n      \"ger\": \"Blaubeere\",\n      \"esp\": \"arándano\"\n   },\n   \"9\": {\n      \"pol\": \"brzoskwinia\",\n      \"eng\": \"peach\",\n      \"ger\": \"Pfirsich\",\n      \"esp\": \"melocotón\"\n   },\n   \"10\": {\n      \"pol\": \"cytryna\",\n      \"eng\": \"lemon\",\n      \"ger\": \"Zitrone\",\n      \"esp\": \"limón\"\n   },\n   \"11\": {\n      \"pol\": \"czarna porzeczka\",\n      \"eng\": \"black currant\",\n      \"ger\": \"schwarze Johannisbeere\",\n      \"esp\": \"grosella negra\"\n   },\n   \"12\": {\n      \"pol\": \"czarny bez\",\n      \"eng\": \"black lilac\",\n      \"ger\": \"Flieder\",\n      \"esp\": \"lila negra\"\n   },\n   \"13\": {\n      \"pol\": \"czereśnia\",\n      \"eng\": \"cherry\",\n      \"ger\": \"Kirsche\",\n      \"esp\": \"cereza\"\n   },\n   \"14\": {\n      \"pol\": \"czerwona porzeczka\",\n      \"eng\": \"red currant\",\n      \"ger\": \"rote Johannisbeere\",\n      \"esp\": \"grosella roja\"\n   },\n   \"15\": {\n      \"pol\": \"daktyl\",\n      \"eng\": \"dactyl\",\n      \"ger\": \"Daktylus\",\n      \"esp\": \"dáctilo\"\n   },\n   \"16\": {\n      \"pol\": \"dzika róża\",\n      \"eng\": \"wild rose\",\n      \"ger\": \"wilde Rose\",\n      \"esp\": \"rosa salvaje\"\n   },\n   \"17\": {\n      \"pol\": \"figa\",\n      \"eng\": \"fig\",\n      \"ger\": \"Feige\",\n      \"esp\": \"higo\"\n   },\n   \"18\": {\n      \"pol\": \"granat\",\n      \"eng\": \"grenade\",\n      \"ger\": \"Granate\",\n      \"esp\": \"granada\"\n   },\n   \"19\": {\n      \"pol\": \"grejpfrut\",\n      \"eng\": \"grapefruit\",\n      \"ger\": \"Grapefruit\",\n      \"esp\": \"pomelo\"\n   },\n   \"20\": {\n      \"pol\": \"gruszka\",\n      \"eng\": \"pear\",\n      \"ger\": \"Birne\",\n      \"esp\": \"pera\"\n   }\n}\nconst wordsFruitsNuts_part2 = {\n    \"21\": {\n      \"pol\": \"jabłko\",\n      \"eng\": \"apple\",\n      \"ger\": \"Apfel\",\n      \"esp\": \"manzana\"\n   },\n   \"22\": {\n      \"pol\": \"jarzębina\",\n      \"eng\": \"mountain ash\",\n      \"ger\": \"Eberesche\",\n      \"esp\": \"serbal\"\n   },\n   \"23\": {\n      \"pol\": \"jeżyna\",\n      \"eng\": \"blackberry\",\n      \"ger\": \"Brombeere\",\n      \"esp\": \"zarzamora\"\n   },\n   \"24\": {\n      \"pol\": \"kasztan jadalny\",\n      \"eng\": \"chestnut\",\n      \"ger\": \"Kastanie\",\n      \"esp\": \"castaño\"\n   },\n   \"25\": {\n      \"pol\": \"kiwi\",\n      \"eng\": \"kiwi\",\n      \"ger\": \"Kiwi\",\n      \"esp\": \"kiwi\"\n   },\n   \"26\": {\n      \"pol\": \"kokos\",\n      \"eng\": \"coconut\",\n      \"ger\": \"Kokosnuss\",\n      \"esp\": \"coco\"\n   },\n   \"27\": {\n      \"pol\": \"kumkwat\",\n      \"eng\": \"kumquat\",\n      \"ger\": \"Kumquat\",\n      \"esp\": \"naranja china\"\n   },\n   \"28\": {\n      \"pol\": \"liczi\",\n      \"eng\": \"lychee\",\n      \"ger\": \"Litschi\",\n      \"esp\": \"lychee\"\n   },\n   \"29\": {\n      \"pol\": \"limonka\",\n      \"eng\": \"lime\",\n      \"ger\": \"Limette\",\n      \"esp\": \"cal\"\n   },\n   \"30\": {\n      \"pol\": \"makadamia\",\n      \"eng\": \"macadamia\",\n      \"ger\": \"Macadamia\",\n      \"esp\": \"macadamia\"\n   },\n   \"31\": {\n      \"pol\": \"malina\",\n      \"eng\": \"raspberry\",\n      \"ger\": \"Himbeere\",\n      \"esp\": \"frambuesa\"\n   },\n   \"32\": {\n      \"pol\": \"mandarynka\",\n      \"eng\": \"mandarin\",\n      \"ger\": \"Mandarin\",\n      \"esp\": \"mandarina\"\n   },\n   \"33\": {\n      \"pol\": \"mango\",\n      \"eng\": \"mango\",\n      \"ger\": \"Mango\",\n      \"esp\": \"mango\"\n   },\n   \"34\": {\n      \"pol\": \"melon\",\n      \"eng\": \"melon\",\n      \"ger\": \"Melone\",\n      \"esp\": \"melón\"\n   },\n   \"35\": {\n      \"pol\": \"migdał\",\n      \"eng\": \"almond\",\n      \"ger\": \"Mandel\",\n      \"esp\": \"almendra\"\n   },\n   \"36\": {\n      \"pol\": \"morela\",\n      \"eng\": \"apricot\",\n      \"ger\": \"Aprikose\",\n      \"esp\": \"albaricoque\"\n   },\n   \"37\": {\n      \"pol\": \"morwa\",\n      \"eng\": \"mulberry\",\n      \"ger\": \"Maulbeere\",\n      \"esp\": \"morera\"\n   },\n   \"38\": {\n      \"pol\": \"nerkowiec\",\n      \"eng\": \"cashew\",\n      \"ger\": \"Cashew\",\n      \"esp\": \"anacardo\"\n   },\n   \"39\": {\n      \"pol\": \"nektarynka\",\n      \"eng\": \"nectarine\",\n      \"ger\": \"Nektarine\",\n      \"esp\": \"nectarina\"\n   },\n   \"40\": {\n      \"pol\": \"opuncja\",\n      \"eng\": \"prickly pear\",\n      \"ger\": \"Feigenkaktus\",\n      \"esp\": \"nopal\"\n   }\n}\nconst wordsFruitsNuts_part3 = {\n   \"41\": {\n      \"pol\": \"orzech brazylijski\",\n      \"eng\": \"brazil nut\",\n      \"ger\": \"Paranuss\",\n      \"esp\": \"nuez de brasil\"\n   },\n   \"42\": {\n      \"pol\": \"orzech laskowy\",\n      \"eng\": \"hazelnut\",\n      \"ger\": \"Haselnuss\",\n      \"esp\": \"avellana\"\n   },\n   \"43\": {\n      \"pol\": \"orzech włoski\",\n      \"eng\": \"walnut\",\n      \"ger\": \"Walnuss\",\n      \"esp\": \"nuez\"\n   },\n   \"44\": {\n      \"pol\": \"orzech ziemny\",\n      \"eng\": \"peanut\",\n      \"ger\": \"Erdnuss\",\n      \"esp\": \"maní\"\n   },\n   \"45\": {\n      \"pol\": \"papaja\",\n      \"eng\": \"papaya\",\n      \"ger\": \"Papaya\",\n      \"esp\": \"papaya\"\n   },\n   \"46\": {\n      \"pol\": \"pekan\",\n      \"eng\": \"pecans\",\n      \"ger\": \"Pecannüsse\",\n      \"esp\": \"pacanas\"\n   },\n   \"47\": {\n      \"pol\": \"persymona\",\n      \"eng\": \"persimmon\",\n      \"ger\": \"Persimmon\",\n      \"esp\": \"caqui\"\n   },\n   \"48\": {\n      \"pol\": \"pigwa\",\n      \"eng\": \"quince\",\n      \"ger\": \"Quitte\",\n      \"esp\": \"membrillo\"\n   },\n   \"49\": {\n      \"pol\": \"orzeszki piniowe\",\n      \"eng\": \"pine nuts\",\n      \"ger\": \"Pinienkerne\",\n      \"esp\": \"piñones\"\n   },\n   \"50\": {\n      \"pol\": \"pistacja\",\n      \"eng\": \"pistachio\",\n      \"ger\": \"Pistazie\",\n      \"esp\": \"pistacho\"\n   },\n   \"51\": {\n      \"pol\": \"pomarańcza\",\n      \"eng\": \"orange\",\n      \"ger\": \"Orange\",\n      \"esp\": \"naranja\"\n   },\n   \"52\": {\n      \"pol\": \"poziomka\",\n      \"eng\": \"wild strawberry\",\n      \"ger\": \"wilde Erdbeere\",\n      \"esp\": \"fresa silvestre\"\n   },\n   \"53\": {\n      \"pol\": \"rambutan\",\n      \"eng\": \"rambutan\",\n      \"ger\": \"Rambutan\",\n      \"esp\": \"rambután\"\n   },\n   \"54\": {\n      \"pol\": \"śliwka\",\n      \"eng\": \"plum\",\n      \"ger\": \"Pflaume\",\n      \"esp\": \"ciruela\"\n   },\n   \"55\": {\n      \"pol\": \"tamarillo\",\n      \"eng\": \"tamarillo\",\n      \"ger\": \"Tamarillo\",\n      \"esp\": \"tomate de árbol\"\n   },\n   \"56\": {\n      \"pol\": \"tarnina\",\n      \"eng\": \"blackthorn\",\n      \"ger\": \"Schwarzdorn\",\n      \"esp\": \"endrino\"\n   },\n   \"57\": {\n      \"pol\": \"truskawka\",\n      \"eng\": \"strawberry\",\n      \"ger\": \"Erdbeere\",\n      \"esp\": \"fresa\"\n   },\n   \"58\": {\n      \"pol\": \"winogrono\",\n      \"eng\": \"grape\",\n      \"ger\": \"Traube\",\n      \"esp\": \"uva\"\n   },\n   \"59\": {\n      \"pol\": \"wiśnia\",\n      \"eng\": \"cherry\",\n      \"ger\": \"Kirsche\",\n      \"esp\": \"cereza\"\n   },\n   \"60\": {\n      \"pol\": \"żurawina\",\n      \"eng\": \"cranberry\",\n      \"ger\": \"Preiselbeere\",\n      \"esp\": \"arándano agrio\"\n   }\n}\n\nexport {wordsFruitsNuts_part1, wordsFruitsNuts_part2, wordsFruitsNuts_part3 }","const wordsTrees_part1 = {\r\n    \"1\": {\r\n        \"pol\": \"brzoza\",\r\n        \"eng\": \"birch-tree\",\r\n        \"ger\": \"Birke\",\r\n        \"esp\": \"abedul\"\r\n    },\r\n    \"2\": {\r\n        \"pol\": \"buk\",\r\n        \"eng\": \"beech\",\r\n        \"ger\": \"Buche\",\r\n        \"esp\": \"haya\"\r\n    },\r\n    \"3\": {\r\n        \"pol\": \"cis\",\r\n        \"eng\": \"yew\",\r\n        \"ger\": \"Eibe\",\r\n        \"esp\": \"tejo\"\r\n    },\r\n    \"4\": {\r\n        \"pol\": \"cyprys\",\r\n        \"eng\": \"cypress\",\r\n        \"ger\": \"Zypresse\",\r\n        \"esp\": \"ciprés\"\r\n    },\r\n    \"5\": {\r\n        \"pol\": \"czeremcha\",\r\n        \"eng\": \"bird cherry\",\r\n        \"ger\": \"Vogelkirsche \",\r\n        \"esp\": \"cereza de pájaro\"\r\n    },\r\n    \"6\": {\r\n        \"pol\": \"dąb\",\r\n        \"eng\": \"oak\",\r\n        \"ger\": \"Eiche\",\r\n        \"esp\": \"roble\"\r\n    },\r\n    \"7\": {\r\n        \"pol\": \"dereń\",\r\n        \"eng\": \"dogwood\",\r\n        \"ger\": \"Hartriegel\",\r\n        \"esp\": \"cornejo\"\r\n    },\r\n    \"8\": {\r\n        \"pol\": \"głóg\",\r\n        \"eng\": \"hawthorn\",\r\n        \"ger\": \"Hagedorn\",\r\n        \"esp\": \"espino\"\r\n    },\r\n    \"9\": {\r\n        \"pol\": \"grab\",\r\n        \"eng\": \"hornbeam\",\r\n        \"ger\": \"Hainbuche \",\r\n        \"esp\": \"carpe\"\r\n    },\r\n    \"10\": {\r\n        \"pol\": \"grusza\",\r\n        \"eng\": \"pear\",\r\n        \"ger\": \"Birne\",\r\n        \"esp\": \"pera\"\r\n    },\r\n    \"11\": {\r\n        \"pol\": \"jabłoń\",\r\n        \"eng\": \"apple-tree\",\r\n        \"ger\": \"Apfelbaum \",\r\n        \"esp\": \"manzano\"\r\n    },\r\n    \"12\": {\r\n        \"pol\": \"jarząb\",\r\n        \"eng\": \"sorb\",\r\n        \"ger\": \"sorb\",\r\n        \"esp\": \"serbal\"\r\n    },\r\n    \"13\": {\r\n        \"pol\": \"jarzębina\",\r\n        \"eng\": \"mountain ash\",\r\n        \"ger\": \"Eberesche\",\r\n        \"esp\": \"serbal\"\r\n    },\r\n    \"14\": {\r\n        \"pol\": \"jesion\",\r\n        \"eng\": \"ash\",\r\n        \"ger\": \"Asche\",\r\n        \"esp\": \"ceniza\"\r\n    },\r\n    \"15\": {\r\n        \"pol\": \"jodła\",\r\n        \"eng\": \"fir\",\r\n        \"ger\": \"Tanne\",\r\n        \"esp\": \"abeto\"\r\n    },\r\n    \"16\": {\r\n        \"pol\": \"klon\",\r\n        \"eng\": \"clone\",\r\n        \"ger\": \"Ahorn\",\r\n        \"esp\": \"arce\"\r\n    },\r\n    \"17\": {\r\n        \"pol\": \"leszczyna\",\r\n        \"eng\": \"hazel\",\r\n        \"ger\": \"Haselnuss\",\r\n        \"esp\": \"avellana\"\r\n    },\r\n    \"18\": {\r\n        \"pol\": \"lilak\",\r\n        \"eng\": \"lilac\",\r\n        \"ger\": \"Flieder\",\r\n        \"esp\": \"lila\"\r\n    },\r\n    \"19\": {\r\n        \"pol\": \"limba\",\r\n        \"eng\": \"pine\",\r\n        \"ger\": \"Kiefer\",\r\n        \"esp\": \"pino\"\r\n    },\r\n    \"20\": {\r\n        \"pol\": \"lipa\",\r\n        \"eng\": \"linden\",\r\n        \"ger\": \"Kalk\",\r\n        \"esp\": \"cal\"\r\n    }\r\n}\r\nconst wordsTrees_part2 = {\r\n    \"21\": {\r\n        \"pol\": \"magnolia\",\r\n        \"eng\": \"magnolia\",\r\n        \"ger\": \"Magnolie\",\r\n        \"esp\": \"magnolia\"\r\n    },\r\n    \"22\": {\r\n        \"pol\": \"miłorząb\",\r\n        \"eng\": \"ginkgo\",\r\n        \"ger\": \"ginkgo\",\r\n        \"esp\": \"gingko\"\r\n    },\r\n    \"23\": {\r\n        \"pol\": \"modrzew\",\r\n        \"eng\": \"larch\",\r\n        \"ger\": \"Lärche\",\r\n        \"esp\": \"alerce\"\r\n    },\r\n    \"24\": {\r\n        \"pol\": \"morwa\",\r\n        \"eng\": \"mulberry\",\r\n        \"ger\": \"Maulbeere\",\r\n        \"esp\": \"morera\"\r\n    },\r\n    \"25\": {\r\n        \"pol\": \"olcha\",\r\n        \"eng\": \"alder\",\r\n        \"ger\": \"Erle\",\r\n        \"esp\": \"aliso\"\r\n    },\r\n    \"26\": {\r\n        \"pol\": \"orzech\",\r\n        \"eng\": \"nut\",\r\n        \"ger\": \"Nuss\",\r\n        \"esp\": \"tuerca\"\r\n    },\r\n    \"27\": {\r\n        \"pol\": \"osika\",\r\n        \"eng\": \"aspen\",\r\n        \"ger\": \"Espe\",\r\n        \"esp\": \"álamo temblón\"\r\n    },\r\n    \"28\": {\r\n        \"pol\": \"ostrokrzew\",\r\n        \"eng\": \"holly\",\r\n        \"ger\": \"Stechpalme \",\r\n        \"esp\": \"acebo\"\r\n    },\r\n    \"29\": {\r\n        \"pol\": \"platan\",\r\n        \"eng\": \"plane-tree\",\r\n        \"ger\": \"Platane\",\r\n        \"esp\": \"plátano\"\r\n    },\r\n    \"30\": {\r\n        \"pol\": \"robinia\",\r\n        \"eng\": \"robinia\",\r\n        \"ger\": \"Robinie\",\r\n        \"esp\": \"robinia\"\r\n    },\r\n    \"31\": {\r\n        \"pol\": \"sosna\",\r\n        \"eng\": \"pine\",\r\n        \"ger\": \"Kiefer\",\r\n        \"esp\": \"pino\"\r\n    },\r\n    \"32\": {\r\n        \"pol\": \"sumak\",\r\n        \"eng\": \"sumach\",\r\n        \"ger\": \"sumach\",\r\n        \"esp\": \"zumaque\"\r\n    },\r\n    \"33\": {\r\n        \"pol\": \"śliwa\",\r\n        \"eng\": \"plum-tree\",\r\n        \"ger\": \"Pflaumenbaum \",\r\n        \"esp\": \"ciruelo\"\r\n    },\r\n    \"34\": {\r\n        \"pol\": \"świerk\",\r\n        \"eng\": \"spruce\",\r\n        \"ger\": \"Fichte\",\r\n        \"esp\": \"picea\"\r\n    },\r\n    \"35\": {\r\n        \"pol\": \"topola\",\r\n        \"eng\": \"poplar\",\r\n        \"ger\": \"Pappel\",\r\n        \"esp\": \"álamo\"\r\n    },\r\n    \"36\": {\r\n        \"pol\": \"trzmielina\",\r\n        \"eng\": \"euonymus\",\r\n        \"ger\": \"Euonymus\",\r\n        \"esp\": \"Euonymus\"\r\n    },\r\n    \"37\": {\r\n        \"pol\": \"wiąz\",\r\n        \"eng\": \"elm\",\r\n        \"ger\": \"Ulme\",\r\n        \"esp\": \"olmo\"\r\n    },\r\n    \"38\": {\r\n        \"pol\": \"wierzba\",\r\n        \"eng\": \"willow\",\r\n        \"ger\": \"Weide\",\r\n        \"esp\": \"sauce\"\r\n    },\r\n    \"39\": {\r\n        \"pol\": \"wiśnia\",\r\n        \"eng\": \"cherry\",\r\n        \"ger\": \"Kirsche\",\r\n        \"esp\": \"cereza\"\r\n    }\r\n}\r\n\r\nexport { wordsTrees_part1, wordsTrees_part2 };","const wordsBathroom = {\r\n    \"0\": {\r\n        \"pol\": \"łazienka\",\r\n        \"eng\": \"bathroom\",\r\n        \"ger\": \"Bad\",\r\n        \"esp\": \"cuarto de baño\"\r\n    },\r\n    \"1\": {\r\n        \"pol\": \"szampon\",\r\n        \"eng\": \"shampoo\",\r\n        \"ger\": \"Shampoo\",\r\n        \"esp\": \"champú\"\r\n    },\r\n    \"2\": {\r\n        \"pol\": \"ręcznik\",\r\n        \"eng\": \"towel\",\r\n        \"ger\": \"Handtuch\",\r\n        \"esp\": \"toalla\"\r\n    },\r\n    \"3\": {\r\n        \"pol\": \"mydło\",\r\n        \"eng\": \"soap\",\r\n        \"ger\": \"Seife\",\r\n        \"esp\": \"jabón\"\r\n    },\r\n    \"4\": {\r\n        \"pol\": \"szczoteczka do zębów\",\r\n        \"eng\": \"toothbrush\",\r\n        \"ger\": \"Zahnbürste\",\r\n        \"esp\": \"cepillo de dientes\"\r\n    },\r\n    \"5\": {\r\n        \"pol\": \"prysznic\",\r\n        \"eng\": \"shower\",\r\n        \"ger\": \"Dusche\",\r\n        \"esp\": \"ducha\"\r\n    },\r\n    \"6\": {\r\n        \"pol\": \"pralka\",\r\n        \"eng\": \"washing machine\",\r\n        \"ger\": \"Waschmaschine\",\r\n        \"esp\": \"almohadilla\"\r\n    },\r\n    \"7\": {\r\n        \"pol\": \"kran\",\r\n        \"eng\": \"tap\",\r\n        \"ger\": \"Zapfhahn\",\r\n        \"esp\": \"grifo\"\r\n    },\r\n    \"8\": {\r\n        \"pol\": \"papier toaletowy\",\r\n        \"eng\": \"toilet paper\",\r\n        \"ger\": \"Toilettenpapier\",\r\n        \"esp\": \"papel higienico\"\r\n    },\r\n    \"9\": {\r\n        \"pol\": \"toaleta\",\r\n        \"eng\": \"toilet\",\r\n        \"ger\": \"Toilette\",\r\n        \"esp\": \"WC\"\r\n    },\r\n    \"10\": {\r\n        \"pol\": \"kąpiel\",\r\n        \"eng\": \"bath\",\r\n        \"ger\": \"Bad\",\r\n        \"esp\": \"baño\"\r\n    },\r\n    \"11\": {\r\n        \"pol\": \"pasta do zębów\",\r\n        \"eng\": \"toothpaste\",\r\n        \"ger\": \"Zahnpasta\",\r\n        \"esp\": \"pasta de dientes\"\r\n    },\r\n    \"12\": {\r\n        \"pol\": \"gabinet\",\r\n        \"eng\": \"cabinet\",\r\n        \"ger\": \"Kabinett\",\r\n        \"esp\": \"oficina\"\r\n    },\r\n    \"13\": {\r\n        \"pol\": \"szczotka do włosów\",\r\n        \"eng\": \"hairbrush\",\r\n        \"ger\": \"Haarbürste\",\r\n        \"esp\": \"cepillo para el cabello\"\r\n    },\r\n    \"14\": {\r\n        \"pol\": \"wanna\",\r\n        \"eng\": \"bathtub\",\r\n        \"ger\": \"Badewanne\",\r\n        \"esp\": \"baño\"\r\n    },\r\n    \"15\": {\r\n        \"pol\": \"grzebień\",\r\n        \"eng\": \"comb\",\r\n        \"ger\": \"Kamm\",\r\n        \"esp\": \"peine\"\r\n    },\r\n    \"16\": {\r\n        \"pol\": \"lustro\",\r\n        \"eng\": \"mirror\",\r\n        \"ger\": \"Spiegel\",\r\n        \"esp\": \"espejo\"\r\n    },\r\n    \"17\": {\r\n        \"pol\": \"perfumy\",\r\n        \"eng\": \"perfume\",\r\n        \"ger\": \"Parfüm\",\r\n        \"esp\": \"perfume\"\r\n    },\r\n    \"18\": {\r\n        \"pol\": \"szminka\",\r\n        \"eng\": \"lipstick\",\r\n        \"ger\": \"Lippenstift\",\r\n        \"esp\": \"lápiz labial\"\r\n    },\r\n    \"19\": {\r\n        \"pol\": \"szlafrok\",\r\n        \"eng\": \"bathrobe\",\r\n        \"ger\": \"Bademantel\",\r\n        \"esp\": \"bata\"\r\n    },\r\n    \"20\": {\r\n        \"pol\": \"umywalka\",\r\n        \"eng\": \"sink\",\r\n        \"ger\": \"Waschbecken\",\r\n        \"esp\": \"lavabo\"\r\n    }\r\n}\r\nconst wordsHome = {\r\n    \"21\": {\r\n        \"pol\": \"pokój\",\r\n        \"eng\": \"room\",\r\n        \"ger\": \"Zimmer\",\r\n        \"esp\": \"habitación\"\r\n    },\r\n    \"22\": {\r\n        \"pol\": \"obraz\",\r\n        \"eng\": \"image\",\r\n        \"ger\": \"Bild\",\r\n        \"esp\": \"imagen\"\r\n    },\r\n    \"23\": {\r\n        \"pol\": \"stół\",\r\n        \"eng\": \"table\",\r\n        \"ger\": \"Tabelle\",\r\n        \"esp\": \"mesa\"\r\n    },\r\n    \"24\": {\r\n        \"pol\": \"szafka\",\r\n        \"eng\": \"cupboard\",\r\n        \"ger\": \"Schrank\",\r\n        \"esp\": \"armario\"\r\n    },\r\n    \"25\": {\r\n        \"pol\": \"fotel\",\r\n        \"eng\": \"armchair\",\r\n        \"ger\": \"Stuhl\",\r\n        \"esp\": \"silla\"\r\n    },\r\n    \"26\": {\r\n        \"pol\": \"krzesło\",\r\n        \"eng\": \"chair\",\r\n        \"ger\": \"Stuhl\",\r\n        \"esp\": \"silla\"\r\n    },\r\n    \"27\": {\r\n        \"pol\": \"taboret\",\r\n        \"eng\": \"stool\",\r\n        \"ger\": \"Hocker\",\r\n        \"esp\": \"taburete\"\r\n    },\r\n    \"28\": {\r\n        \"pol\": \"zegar\",\r\n        \"eng\": \"clock\",\r\n        \"ger\": \"Uhr\",\r\n        \"esp\": \"reloj\"\r\n    },\r\n    \"29\": {\r\n        \"pol\": \"telewizor\",\r\n        \"eng\": \"television set\",\r\n        \"ger\": \"Fernsehen\",\r\n        \"esp\": \"televisión\"\r\n    },\r\n    \"30\": {\r\n        \"pol\": \"półka\",\r\n        \"eng\": \"the shelf\",\r\n        \"ger\": \"Regal\",\r\n        \"esp\": \"estante\"\r\n    },\r\n    \"31\": {\r\n        \"pol\": \"komputer\",\r\n        \"eng\": \"computer\",\r\n        \"ger\": \"Computer\",\r\n        \"esp\": \"ordenador\"\r\n    },\r\n    \"32\": {\r\n        \"pol\": \"telefon\",\r\n        \"eng\": \"phone\",\r\n        \"ger\": \"Telefon\",\r\n        \"esp\": \"teléfono\"\r\n    }\r\n}\r\nconst wordsKitchen = {\r\n    \"33\": {\r\n        \"pol\": \"kuchnia\",\r\n        \"eng\": \"kitchen\",\r\n        \"ger\": \"Küche\",\r\n        \"esp\": \"cocina\"\r\n    },\r\n    \"34\": {\r\n        \"pol\": \"lodówka\",\r\n        \"eng\": \"fridge\",\r\n        \"ger\": \"Kühlschrank\",\r\n        \"esp\": \"nevera\"\r\n    },\r\n    \"35\": {\r\n        \"pol\": \"kuchenka\",\r\n        \"eng\": \"stove\",\r\n        \"ger\": \"Kocher\",\r\n        \"esp\": \"estufa\"\r\n    },\r\n    \"36\": {\r\n        \"pol\": \"blat \",\r\n        \"eng\": \"countertop\",\r\n        \"ger\": \"Arbeitsplatte \",\r\n        \"esp\": \"encimera\"\r\n    },\r\n    \"37\": {\r\n        \"pol\": \"zlew\",\r\n        \"eng\": \"sink\",\r\n        \"ger\": \"Spüle\",\r\n        \"esp\": \"fregadero\"\r\n    },\r\n    \"38\": {\r\n        \"pol\": \"nóż\",\r\n        \"eng\": \"knife\",\r\n        \"ger\": \"Messer\",\r\n        \"esp\": \"cuchillo\"\r\n    },\r\n    \"39\": {\r\n        \"pol\": \"widelec\",\r\n        \"eng\": \"fork\",\r\n        \"ger\": \"Gabel\",\r\n        \"esp\": \"tenedor\"\r\n    },\r\n    \"40\": {\r\n        \"pol\": \"łyżka\",\r\n        \"eng\": \"spoon\",\r\n        \"ger\": \"Löffel\",\r\n        \"esp\": \"cuchara\"\r\n    },\r\n    \"41\": {\r\n        \"pol\": \"talerz\",\r\n        \"eng\": \"a plate\",\r\n        \"ger\": \"Platte\",\r\n        \"esp\": \"placa\"\r\n    },\r\n    \"42\": {\r\n        \"pol\": \"kubek\",\r\n        \"eng\": \"mug\",\r\n        \"ger\": \"Becher\",\r\n        \"esp\": \"jarra\"\r\n    },\r\n    \"43\": {\r\n        \"pol\": \"szklanka\",\r\n        \"eng\": \"glass\",\r\n        \"ger\": \"Glas\",\r\n        \"esp\": \"vidrio\"\r\n    },\r\n    \"44\": {\r\n        \"pol\": \"spodek\",\r\n        \"eng\": \"saucer\",\r\n        \"ger\": \"Untertasse \",\r\n        \"esp\": \"platillo\"\r\n    },\r\n    \"45\": {\r\n        \"pol\": \"filiżanka\",\r\n        \"eng\": \"cup\",\r\n        \"ger\": \"Tasse\",\r\n        \"esp\": \"taza\"\r\n    },\r\n    \"46\": {\r\n        \"pol\": \"deska\",\r\n        \"eng\": \"board\",\r\n        \"ger\": \"Brett\",\r\n        \"esp\": \"tablero\"\r\n    },\r\n    \"47\": {\r\n        \"pol\": \"mikser\",\r\n        \"eng\": \"mixer\",\r\n        \"ger\": \"Mischer\",\r\n        \"esp\": \"mezclador\"\r\n    },\r\n    \"48\": {\r\n        \"pol\": \"garnek\",\r\n        \"eng\": \"pot\",\r\n        \"ger\": \"Topf\",\r\n        \"esp\": \"olla\"\r\n    },\r\n    \"49\": {\r\n        \"pol\": \"patelnia\",\r\n        \"eng\": \"pan\",\r\n        \"ger\": \"Bratpfanne\",\r\n        \"esp\": \"sartén\"\r\n    },\r\n    \"50\": {\r\n        \"pol\": \"przykrywka\",\r\n        \"eng\": \"lid\",\r\n        \"ger\": \"Deckel\",\r\n        \"esp\": \"tapa\"\r\n    },\r\n    \"67\": {\r\n        \"pol\": \"piekarnik\",\r\n        \"eng\": \"oven\",\r\n        \"ger\": \"Backofen\",\r\n        \"esp\": \"horno\"\r\n    }\r\n}\r\nconst wordsHousehold = {\r\n    \"51\": {\r\n        \"pol\": \"sypialnia\",\r\n        \"eng\": \"bedroom\",\r\n        \"ger\": \"Schlafzimmer\",\r\n        \"esp\": \"dormitorio\"\r\n    },\r\n    \"52\": {\r\n        \"pol\": \"budzik\",\r\n        \"eng\": \"alarm clock\",\r\n        \"ger\": \"Wecker\",\r\n        \"esp\": \"despertador\"\r\n    },\r\n    \"53\": {\r\n        \"pol\": \"łóżko\",\r\n        \"eng\": \"bed\",\r\n        \"ger\": \"Bett\",\r\n        \"esp\": \"cama\"\r\n    },\r\n    \"54\": {\r\n        \"pol\": \"poduszka\",\r\n        \"eng\": \"cushion\",\r\n        \"ger\": \"Kissen\",\r\n        \"esp\": \"almohada\"\r\n    },\r\n    \"55\": {\r\n        \"pol\": \"prześcieradło\",\r\n        \"eng\": \"sheet\",\r\n        \"ger\": \"Blatt\",\r\n        \"esp\": \"hoja\"\r\n    },\r\n    \"56\": {\r\n        \"pol\": \"okno \",\r\n        \"eng\": \"window\",\r\n        \"ger\": \"Fenster\",\r\n        \"esp\": \"ventana\"\r\n    },\r\n    \"57\": {\r\n        \"pol\": \"zasłona\",\r\n        \"eng\": \"curtain\",\r\n        \"ger\": \"Schleier\",\r\n        \"esp\": \"velo\"\r\n    },\r\n    \"58\": {\r\n        \"pol\": \"firanka \",\r\n        \"eng\": \"curtain\",\r\n        \"ger\": \"Vorhang\",\r\n        \"esp\": \"cortina\"\r\n    },\r\n    \"59\": {\r\n        \"pol\": \"drzwi\",\r\n        \"eng\": \"door\",\r\n        \"ger\": \"Tür\",\r\n        \"esp\": \"puerta\"\r\n    },\r\n    \"60\": {\r\n        \"pol\": \"ściana\",\r\n        \"eng\": \"wall\",\r\n        \"ger\": \"Wand\",\r\n        \"esp\": \"pared\"\r\n    },\r\n    \"61\": {\r\n        \"pol\": \"przedpokój\",\r\n        \"eng\": \"hall\",\r\n        \"ger\": \"Vorraum\",\r\n        \"esp\": \"antesala\"\r\n    },\r\n    \"62\": {\r\n        \"pol\": \"strych\",\r\n        \"eng\": \"attic\",\r\n        \"ger\": \"Dachboden \",\r\n        \"esp\": \"ático\"\r\n    },\r\n    \"63\": {\r\n        \"pol\": \"piwnica\",\r\n        \"eng\": \"cellar\",\r\n        \"ger\": \"Keller\",\r\n        \"esp\": \"bodega\"\r\n    },\r\n    \"64\": {\r\n        \"pol\": \"podłoga\",\r\n        \"eng\": \"floor\",\r\n        \"ger\": \"Boden\",\r\n        \"esp\": \"piso\"\r\n    },\r\n    \"65\": {\r\n        \"pol\": \"sufit\",\r\n        \"eng\": \"ceiling\",\r\n        \"ger\": \"Decke\",\r\n        \"esp\": \"techo\"\r\n    },\r\n    \"66\": {\r\n        \"pol\": \"parapet\",\r\n        \"eng\": \"windowsill\",\r\n        \"ger\": \"Fensterbank \",\r\n        \"esp\": \"antepecho\"\r\n    },\r\n    \"68\": {\r\n        \"pol\": \"schody\",\r\n        \"eng\": \"stairs\",\r\n        \"ger\": \"Treppe\",\r\n        \"esp\": \"escalera\"\r\n    },\r\n    \"69\": {\r\n        \"pol\": \"poręcz\",\r\n        \"eng\": \"handrail\",\r\n        \"ger\": \"Geländer\",\r\n        \"esp\": \"barandilla\"\r\n    },\r\n    \"70\": {\r\n        \"pol\": \"balustrada\",\r\n        \"eng\": \"balustrade\",\r\n        \"ger\": \"Balustrade\",\r\n        \"esp\": \"balaustrada\"\r\n    },\r\n    \"71\": {\r\n        \"pol\": \"balkon\",\r\n        \"eng\": \"balcony\",\r\n        \"ger\": \"Balkon\",\r\n        \"esp\": \"balcón\"\r\n    },\r\n    \"72\": {\r\n        \"pol\": \"dach\",\r\n        \"eng\": \"roof\",\r\n        \"ger\": \"Dach\",\r\n        \"esp\": \"tejado\"\r\n    },\r\n    \"73\": {\r\n        \"pol\": \"kominek\",\r\n        \"eng\": \"fireplace\",\r\n        \"ger\": \"Kamin\",\r\n        \"esp\": \"hogar\"\r\n    },\r\n    \"74\": {\r\n        \"pol\": \"dywan\",\r\n        \"eng\": \"carpet\",\r\n        \"ger\": \"Teppich\",\r\n        \"esp\": \"alfombra\"\r\n    },\r\n    \"75\": {\r\n        \"pol\": \"spiżarnia\",\r\n        \"eng\": \"pantry\",\r\n        \"ger\": \"Speisekammer \",\r\n        \"esp\": \"despensa\"\r\n    },\r\n    \"76\": {\r\n        \"pol\": \"książka\",\r\n        \"eng\": \"book\",\r\n        \"ger\": \"Buch\",\r\n        \"esp\": \"libro\"\r\n    }\r\n}\r\nconst wordsRelations = {\r\n    \"77\": {\r\n        \"pol\": \"w\",\r\n        \"eng\": \"in\",\r\n        \"ger\": \"in\",\r\n        \"esp\": \"en\"\r\n    },\r\n    \"78\": {\r\n        \"pol\": \"na\",\r\n        \"eng\": \"on\",\r\n        \"ger\": \"es\",\r\n        \"esp\": \"lo\"\r\n    },\r\n    \"79\": {\r\n        \"pol\": \"pod\",\r\n        \"eng\": \"under\",\r\n        \"ger\": \"unter\",\r\n        \"esp\": \"bajo\"\r\n    },\r\n    \"80\": {\r\n        \"pol\": \"za\",\r\n        \"eng\": \"behind\",\r\n        \"ger\": \"hinter\",\r\n        \"esp\": \"detrás\"\r\n    },\r\n    \"81\": {\r\n        \"pol\": \"przed\",\r\n        \"eng\": \"in front of\",\r\n        \"ger\": \"vor\",\r\n        \"esp\": \"en frente de\"\r\n    },\r\n    \"82\": {\r\n        \"pol\": \"ponad\",\r\n        \"eng\": \"over\",\r\n        \"ger\": \"über\",\r\n        \"esp\": \"encima\"\r\n    },\r\n    \"83\": {\r\n        \"pol\": \"poniżej\",\r\n        \"eng\": \"below\",\r\n        \"ger\": \"unten\",\r\n        \"esp\": \"por debajo\"\r\n    },\r\n    \"84\": {\r\n        \"pol\": \"obok\",\r\n        \"eng\": \"next to\",\r\n        \"ger\": \"neben\",\r\n        \"esp\": \"al lado de\"\r\n    }\r\n}\r\n\r\nexport {wordsBathroom, wordsHome, wordsHousehold, wordsKitchen, wordsRelations };","import React, {Component} from 'react';\nimport Main from './components/Main/Main';\n\nimport { wordsAnimals_part1, wordsAnimals_part2, wordsAnimals_part3 } from './assets/wordLists/wordsAnimals';\nimport { wordsPostOffice } from './assets/wordLists/wordsPostOffice';\nimport { wordsPeople } from './assets/wordLists/wordsPeople';\nimport { wordsWeekDays } from './assets/wordLists/wordsWeekDays';\nimport { wordsFruitsNuts_part1, wordsFruitsNuts_part2, wordsFruitsNuts_part3 } from './assets/wordLists/wordsFruitsNuts';\nimport { wordsTrees_part1, wordsTrees_part2 } from './assets/wordLists/wordsTrees';\nimport { wordsBathroom, wordsHome, wordsHousehold, wordsKitchen, wordsRelations} from './assets/wordLists/wordsHouse';\n\n// import './App.module.css';\n\nclass App extends Component {\n\n\twordsLists = {\n\t\twordsPostOffice: wordsPostOffice,\n\t\twordsPeople: wordsPeople,\n\t\twordsWeekDays: wordsWeekDays,\n\t\twordsBathroom: wordsBathroom,\n\t\twordsHome: wordsHome,\n\t\twordsHousehold: wordsHousehold,\n\t\twordsKitchen: wordsKitchen,\n\t\twordsRelations: wordsRelations,\n\t\twordsAnimals_part1: wordsAnimals_part1,\n\t\twordsAnimals_part2: wordsAnimals_part2,\n\t\twordsAnimals_part3: wordsAnimals_part3,\n\t\twordsFruitsNuts_part1: wordsFruitsNuts_part1,\n\t\twordsFruitsNuts_part2: wordsFruitsNuts_part2,\n\t\twordsFruitsNuts_part3: wordsFruitsNuts_part3,\n\t\twordsTrees_part1: wordsTrees_part1,\n\t\twordsTrees_part2: wordsTrees_part2,\n\t}\n\n\trender(){\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\n\t\t\t\t<Main wordsLists={this.wordsLists}/>\n\n\t\t\t\t<footer>Online-Tutor by MarcinO</footer>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenuList\":\"MainMenuList_MainMenuList__3SXIE\",\"Visible\":\"MainMenuList_Visible__19nF8\",\"inVisible\":\"MainMenuList_inVisible__3xFCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LangInfo\":\"LanguagesSelector_LangInfo__wsafd\",\"Selector\":\"LanguagesSelector_Selector__25xUe\",\"Divider\":\"LanguagesSelector_Divider__4q5Y1\"};"],"sourceRoot":""}